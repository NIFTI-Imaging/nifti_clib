language: cpp # sets both CXX and CC envirionmental variables
# Use the faster container-based infrastructure.
#sudo: false
# https://github.com/travis-ci/travis-ci/issues/9033
sudo: true
env:
  global:

# -m32 is not supported 
# no poppler, openjpeg, uuid, json
# no swig
matrix:
  fast_finish: true
  include:
    - compiler: gcc
      dist: xenial
      os: linux
      env:
        - PARALLEL_LEVEL=3
        - AGENT_BUILDDIRECTORY=${TRAVIS_BUILD_DIR}/NIFTIworkspace
        - BUILD_SOURCESDIRECTORY=${TRAVIS_BUILD_DIR}
        - SYSTEM_PULLREQUEST_SOURCEBRANCH=${TRAVIS_PULL_REQUEST_BRANCH}
        - BUILD_SOURCEBRANCHNAME=${TRAVIS_PULL_REQUEST_BRANCH}
        - BUILD_BUILDID=${TRAVIS_BUILD_ID}
        - SYSTEM_PULLREQUEST_PULLREQUESTNUMBER=${TRAVIS_PULL_REQUEST}
        - CTEST_SCRIPT_DIRECTORY=${TRAVIS_BUILD_DIR}/cmake
        - CXXFLAGS="-g -O0 -Wall -Wextra -m64 -W -Wshadow -Wunused-variable -Wunused-parameter -Wunused-function -Wunused -Wno-system-headers -Wno-deprecated -Woverloaded-virtual -Wwrite-strings -fprofile-arcs -ftest-coverage"
        - CFLAGS="-g -O0 -Wall -Wextra -m64 -W -Wshadow -Wunused-variable -Wunused-parameter -Wunused-function -Wunused -Wno-system-headers -Wno-deprecated -Wwrite-strings -fprofile-arcs -ftest-coverage"
        - LDFLAGS="-fprofile-arcs -ftest-coverage -lgcov"
        - INTERPROCEDURAL_OPTIMIZATION="ON"
        - B_NAME=system_gcc
        - COVERAGE="ON"
        - SCANBUILD_EXE=""
    - compiler: clang
      dist: xenial
      os: linux
      env:
        - PARALLEL_LEVEL=3
        - AGENT_BUILDDIRECTORY=${TRAVIS_BUILD_DIR}/NIFTIworkspace
        - BUILD_SOURCESDIRECTORY=${TRAVIS_BUILD_DIR}
        - SYSTEM_PULLREQUEST_SOURCEBRANCH=${TRAVIS_PULL_REQUEST_BRANCH}
        - BUILD_SOURCEBRANCHNAME=${TRAVIS_PULL_REQUEST_BRANCH}
        - BUILD_BUILDID=${TRAVIS_BUILD_ID}
        - SYSTEM_PULLREQUEST_PULLREQUESTNUMBER=${TRAVIS_PULL_REQUEST}
        - CTEST_SCRIPT_DIRECTORY=${TRAVIS_BUILD_DIR}/cmake
        - ASAN_OPTIONS=verbosity=1:log_threads=1
        - CFLAGS="-Wall -Wextra -m64 -W -Wshadow -Wunused-variable -Wunused-parameter -Wunused-function -Wunused -Wno-system-headers -Wno-deprecated -Wwrite-strings -fsanitize=address,undefined"
        - CXXFLAGS="-g -Wall -Wextra -m64 -fsanitize=address,undefined"
        - INTERPROCEDURAL_OPTIMIZATION="OFF"
        - B_NAME=fsanitize_clang
        - COVERAGE="OFF"
        - SCANBUILD_EXE="scan-build"
        - CCC_CC=clang
        - CCC_CXX=clang++
    - compiler: clang
      os: osx
      env:
        - PARALLEL_LEVEL=3
        - AGENT_BUILDDIRECTORY=${TRAVIS_BUILD_DIR}/NIFTIworkspace
        - BUILD_SOURCESDIRECTORY=${TRAVIS_BUILD_DIR}
        - BUILD_BUILDID=${TRAVIS_BUILD_ID}
        - SYSTEM_PULLREQUEST_SOURCEBRANCH=${TRAVIS_PULL_REQUEST_BRANCH}
        - BUILD_SOURCEBRANCHNAME=${TRAVIS_PULL_REQUEST_BRANCH}
        - SYSTEM_PULLREQUEST_PULLREQUESTNUMBER=${TRAVIS_PULL_REQUEST}
        - CTEST_SCRIPT_DIRECTORY=${TRAVIS_BUILD_DIR}/cmake
 # -m64 -fsanitize=address,undefined
        - CFLAGS="-O3 -Wall -Wextra -Wshadow -Wunused-variable -Wunused-parameter -Wunused-function -Wunused -Wno-system-headers -Wno-deprecated -Wwrite-strings"
        - CXXFLAGS="-O3 -Wall -Wextra -Wshadow -Wunused-variable -Wunused-parameter -Wunused-function -Wunused -Wno-system-headers -Wno-deprecated -Wwrite-strings"
        - INTERPROCEDURAL_OPTIMIZATION="ON"
        - B_NAME=osx_clang
        - COVERAGE="OFF"
        - SCANBUILD_EXE=""
        - CCC_CC=clang
        - CCC_CXX=clang++

before_install:
  #- env
  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p ${TRAVIS_BUILD_DIR}/deps
      pushd ${TRAVIS_BUILD_DIR}/deps
        #CMAKE_URL="https://cmake.org/files/v3.13/cmake-3.13.2-Linux-x86_64.tar.gz"
        CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v3.13.2/cmake-3.13.2-Linux-x86_64.tar.gz"
        mkdir -p cmake-3.13.2 && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake-3.13.2
        export PATH=${TRAVIS_BUILD_DIR}/deps/cmake-3.13.2/bin:${PATH}:/usr/bin
      popd
    else
      brew install cmake || brew upgrade cmake
    fi
  - cd ${TRAVIS_BUILD_DIR}
  - cmake --version
  
install: true
before_script: true
script:
  - which $CXX || true
  - $CXX --version || true
  - which $CC || true
  - $CC --version || true
  - which scan-build || true
  - which gcov || true
  - ${SCANBUILD_EXE} ctest -S ${CTEST_SCRIPT_DIRECTORY}/travis_dashboard.cmake -V -j 4

after_success: true
after_failure: true
after_script: true
